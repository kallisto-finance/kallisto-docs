(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{436:function(t,e,o){"use strict";o.r(e);var a=o(65),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"how-to-use-kallisto"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#how-to-use-kallisto"}},[t._v("#")]),t._v(" How to use Kallisto")]),t._v(" "),o("p",[t._v("Navigate to "),o("a",{attrs:{href:"https://kallisto.finance/",target:"_blank",rel:"noopener noreferrer"}},[t._v("kallisto.finance"),o("OutboundLink")],1),t._v(".")]),t._v(" "),o("ul",[o("li",[t._v("Start by connecting your wallet.")])]),t._v(" "),o("blockquote",[o("p",[t._v("We are using MetaMask in this tutorial. Ensure that you have access\nto your wallet on the browser you are using.")])]),t._v(" "),o("ul",[o("li",[t._v("Select the account you would like to connect.")])]),t._v(" "),o("blockquote",[o("p",[t._v("Ensure that you are connecting to official Kallisto finance dApp when\nconnecting your wallet.")])]),t._v(" "),o("ul",[o("li",[t._v("You will see the vault dashboard that shows the active pool,\nthe amount of liquidity your account is providing and how much of\nthe pool liquidity is yours.")]),t._v(" "),o("li",[t._v("On the dashboard, a user is able to manage their liquidity by either\nadding or withdrawing assets.")])]),t._v(" "),o("h2",{attrs:{id:"deposits"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#deposits"}},[t._v("#")]),t._v(" Deposits")]),t._v(" "),o("p",[t._v("If the user deposits a token other than a token of the main pool, Kallisto will swap the token to an\nallowable token using Curve’s swap router to find the optimal swap route.")]),t._v(" "),o("p",[t._v("Upon a user’s deposit, the Kallisto vault adds liquidity to the main pool on Curve.")]),t._v(" "),o("p",[t._v("Users are always allowed to deposit:")]),t._v(" "),o("ul",[o("li",[t._v("USDT")]),t._v(" "),o("li",[t._v("wBTC")]),t._v(" "),o("li",[t._v("WETH")]),t._v(" "),o("li",[t._v("DAI")]),t._v(" "),o("li",[t._v("USDC")]),t._v(" "),o("li",[t._v("ETH")]),t._v(" "),o("li",[t._v("stETH")])]),t._v(" "),o("p",[t._v("Users are allowed to deposit the following tokens if they are included in the Curve pool:")]),t._v(" "),o("ul",[o("li",[t._v("renBTC")]),t._v(" "),o("li",[t._v("FRAX")]),t._v(" "),o("li",[t._v("MIM")]),t._v(" "),o("li",[t._v("alETH")])]),t._v(" "),o("h2",{attrs:{id:"withdrawals"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#withdrawals"}},[t._v("#")]),t._v(" Withdrawals")]),t._v(" "),o("p",[t._v("As removing liquidity always results in multiple tokens, the vault will swap using the optimal\nswap route provided by Curve’s swap router. Users can withdraw in two ways after removing\nliquidity:")]),t._v(" "),o("ol",[o("li",[t._v("Swap tokens into stablecoins for withdrawal")]),t._v(" "),o("li",[t._v("Return tokens that were moved from the target pool")])]),t._v(" "),o("p",[t._v("Liquidity is removed as soon as a user withdraws.")]),t._v(" "),o("details",{staticClass:"custom-block details"},[o("summary",[t._v("Swapping Optimization")]),t._v(" "),o("p",[t._v("There are three scenarios where a swapping method is needed:")]),t._v(" "),o("ol",[o("li",[t._v("When users makes deposits and the deposit token is not in the target pool")]),t._v(" "),o("li",[t._v("When users withdraw a token that is different than the one received from the Curve pool.")]),t._v(" "),o("li",[t._v("When the vault switches from one pool to another")])]),t._v(" "),o("p",[t._v("Kallisto uses the "),o("a",{attrs:{href:"https://github.com/curvefi/curve-js#router-exchange",target:"_blank",rel:"noopener noreferrer"}},[t._v("CurveFi SwapRoute"),o("OutboundLink")],1),t._v("\nto obtain the optimal swap route.")])])])}),[],!1,null,null,null);e.default=i.exports}}]);