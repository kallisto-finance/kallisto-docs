(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{438:function(t,s,a){"use strict";a.r(s);var e=a(65),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"scheduler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scheduler"}},[t._v("#")]),t._v(" Scheduler")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/palomachain/paloma",target:"_blank",rel:"noopener noreferrer"}},[t._v("Paloma"),a("OutboundLink")],1),t._v(" will execute daily searches for\nthe highest APY pool on Curve and selects the best opportunities to join the selected\npools. It obtains price feeds and calculates two pieces of information for the vault:")]),t._v(" "),a("ul",[a("li",[t._v("Target pool")]),t._v(" "),a("li",[t._v("Target pool entrance point")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("What is Paloma?")]),t._v(" "),a("p",[t._v("Paloma is an application-specific chain built using the CosmosSDK that can perform\njob scheduling. The documentation for Paloma will be released soon.")]),t._v(" "),a("p",[a("strong",[t._v("An off-chain script will move the vault liquidity from one Curve pool to another until Paloma is active.")])])]),t._v(" "),a("h2",{attrs:{id:"process"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process"}},[t._v("#")]),t._v(" Process")]),t._v(" "),a("ol",[a("li",[t._v("Strategy acquires data from Curve Pool performance")]),t._v(" "),a("li",[t._v("Strategy then identifies next best-performing pool by APY")]),t._v(" "),a("li",[t._v("Kallisto update_pool function is called by any user to swap into the new pool")])]),t._v(" "),a("h1",{attrs:{id:"jobs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jobs"}},[t._v("#")]),t._v(" Jobs")]),t._v(" "),a("h2",{attrs:{id:"pools"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pools"}},[t._v("#")]),t._v(" Pools")]),t._v(" "),a("h3",{attrs:{id:"target-pool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#target-pool"}},[t._v("#")]),t._v(" Target pool")]),t._v(" "),a("p",[t._v("Yield chasing is achieved by finding the target pool with the "),a("strong",[t._v("highest APY")]),t._v(" from a selection\nof candidate pools. These candidate pools are a selection of Curve pools.")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Curve Pools vs. Crypto Pools")]),t._v(" "),a("p",[t._v("Becoming an LP in a Crypto pool is similar to stable pools.\nCrypto pools are Curve pools that hold assets at different prices.\nThey use liquidity more effectively by concentrating it at current prices.")])]),t._v(" "),a("p",[t._v("The following conditions choose the candidate pools:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("APY")])]),t._v(" "),a("li",[a("strong",[t._v("TVL")]),t._v(" > "),a("code",[t._v("tvl_threshold")])]),t._v(" "),a("li",[a("strong",[t._v("Daily volume")]),t._v(" > "),a("code",[t._v("daily_volume_threshold")])]),t._v(" "),a("li",[a("strong",[t._v("Token imbalance")]),t._v(" < "),a("code",[t._v("token_imbalance_threshold")])])]),t._v(" "),a("p",[t._v("Once the target pool is chosen, it will change the "),a("em",[t._v("state config")]),t._v(" and remain in\nthat state until the next daily pool update. The mechanism also manually excludes\nsome pools that may be highly volatile, offer a high risk of impermanent loss, etc.")]),t._v(" "),a("h3",{attrs:{id:"check-for-pool-update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#check-for-pool-update"}},[t._v("#")]),t._v(" Check for Pool Update")]),t._v(" "),a("ul",[a("li",[t._v("Kallisto strategy checks the time between now and when the current Curve pool was entered AND checks the current vault total cap.")]),t._v(" "),a("li",[t._v("Total cap calculation is the balance from Curve LP from vault "),a("code",[t._v("main_lp_token")]),t._v(" multiplied by\n"),a("a",{attrs:{href:"https://thegraph.com/explorer/subgraph?id=4yx4rR6Kf8WH4RJPGhLSHojUxJzRWgEZb51iTran1sEG&view=Overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("Curve LP price information"),a("OutboundLink")],1),t._v(":")])]),t._v(" "),a("p",[a("span",{staticClass:"katex-display"},[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[a("semantics",[a("mrow",[a("mi",[t._v("m")]),a("mi",[t._v("a")]),a("mi",[t._v("i")]),a("msub",[a("mi",[t._v("n")]),a("mi",[t._v("l")])],1),a("msub",[a("mi",[t._v("p")]),a("mi",[t._v("t")])],1),a("mi",[t._v("o")]),a("mi",[t._v("k")]),a("mi",[t._v("e")]),a("mi",[t._v("n")]),a("mo",[t._v("×")]),a("mi",[t._v("L")]),a("mi",[t._v("P")]),a("mi",[t._v("p")]),a("mi",[t._v("r")]),a("mi",[t._v("i")]),a("mi",[t._v("c")]),a("mi",[t._v("e")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("main_lp_token \\times LP price\n")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.8889em","vertical-align":"-0.1944em"}}),a("span",{staticClass:"mord mathnormal"},[t._v("mai")]),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal"},[t._v("n")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.3361em"}},[a("span",{staticStyle:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mathnormal mtight",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])]),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal"},[t._v("p")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.2806em"}},[a("span",{staticStyle:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mathnormal mtight"},[t._v("t")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])]),a("span",{staticClass:"mord mathnormal"},[t._v("o")]),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),a("span",{staticClass:"mord mathnormal"},[t._v("e")]),a("span",{staticClass:"mord mathnormal"},[t._v("n")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),a("span",{staticClass:"mbin"},[t._v("×")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.8778em","vertical-align":"-0.1944em"}}),a("span",{staticClass:"mord mathnormal"},[t._v("L")]),a("span",{staticClass:"mord mathnormal"},[t._v("Pp")]),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")]),a("span",{staticClass:"mord mathnormal"},[t._v("i")]),a("span",{staticClass:"mord mathnormal"},[t._v("ce")])])])])])]),t._v(" "),a("p",[t._v("Rebalance lock-up ("),a("code",[t._v("lock_period")]),t._v(") is the time the vault waits from one pool update to the\nnext one. It is determined by the vault volume. When the vault volume is small, the\nrebalance lock-up time is large to reduce the cost of frequent trading. Once the volume\nis large enough, the lock-up time becomes shorter to take advantage of the most up-to-date\nmarket info. Currently, this parameter is in three different tiers:")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("total cap below $100k: "),a("code",[t._v("lock_period")]),t._v(" = 1 month")]),t._v(" OR")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("total cap ≥ $100k and < $1MN: "),a("code",[t._v("lock_period")]),t._v(" = 1 week")]),t._v(" OR")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("total cap ≥ $1MN: "),a("code",[t._v("lock_period")]),t._v("  = 1 day")])]),t._v(" "),a("p",[t._v("The script will pass "),a("code",[t._v("swap_route")]),t._v(" and "),a("code",[t._v("new_pool")]),t._v(" (the pool address output from the script)\nas parameters to "),a("code",[t._v("update_pool")]),t._v(".")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update_pool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address _out_token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" int128 old_i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SwapRoute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" swap_route"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address new_pool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address new_deposit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" int128 new_i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uint8 new_pool_coin_count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address new_lp_token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bool new_is_crypto_pool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("_out_token")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" withdraw token address from the old pool\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("old_i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" withdraw token index "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" the old pool\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("swap_route")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" dynamic array "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" swap route\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("new_pool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("pool")]),t._v(" address\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("new_deposit")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("deposit")]),t._v(" contract address\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("new_i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" deposit token index "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" the "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("pool")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("new_pool_coin_count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("pool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("coin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("underlying coin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" counts\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("new_lp_token")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("curve")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LP")]),t._v(" token address\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("new_is_crypto_pool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" crypto pool"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" the index type "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" removing_liquidity_one_coin is uint256"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" it is "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" the index type is int128"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" it is "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("p",[t._v("Once "),a("code",[t._v("update_pool")]),t._v(" is updated, "),a("code",[t._v("SwapRoute")]),t._v(" will interpret the new pool.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("struct SwapRoute"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("swap_pool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" address "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" pool address to exchange\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("j_token")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" address "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" token address to exchange out from the pool\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" int128 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" from token index\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("j")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" int128 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" to token index\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("is_underlying")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bool "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" pools that we should use "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exchange_underlying")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" instead "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("is_crypto_pool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bool "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" crypto pools that requires uint256 index instead "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" int128\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("min_amount")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" uint256 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" min token amount to exchange out "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" every swap\n")])])]),a("h4",{attrs:{id:"pool-update-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pool-update-example"}},[t._v("#")]),t._v(" Pool Update Example")]),t._v(" "),a("p",[t._v("Example for switching from "),a("strong",[t._v("MIM+3")]),t._v(" to the "),a("strong",[t._v("stETH")]),t._v(":")]),t._v(" "),a("blockquote",[a("p",[t._v("The example uses the "),a("RouterLink",{attrs:{to:"/guide/scripts.html#updatepoolpy"}},[t._v("updatepool.py script")]),t._v(".")],1)]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("Vault.update_pool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("USDT, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TRICRYPTO2_INFO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", WETH, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(", False, True, \nmin_eth_amount_from_swap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("WETH, VETH, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(", False, False, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", STETH_INFO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", \nSTETH_INFO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(", STETH_INFO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(", False"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ol",[a("li",[t._v("Determine the swap:\n"),a("ul",[a("li",[t._v("Withdraw "),a("strong",[t._v("USDT")]),t._v(" from "),a("strong",[t._v("MIM+3")])]),t._v(" "),a("li",[t._v("Swap "),a("strong",[t._v("USDT")]),t._v(" -> "),a("strong",[t._v("WETH")])]),t._v(" "),a("li",[t._v("Swap "),a("strong",[t._v("WETH")]),t._v(" -> "),a("strong",[t._v("ETH")])]),t._v(" "),a("li",[t._v("Deposit "),a("strong",[t._v("ETH")]),t._v(" to "),a("strong",[t._v("stETH")])])])]),t._v(" "),a("li",[t._v("Obtain the "),a("strong",[t._v("USDT index")]),t._v(" of "),a("strong",[t._v("MIM+3")]),t._v(":\n"),a("ul",[a("li",[a("strong",[t._v("0 : MIM+3")])]),t._v(" "),a("li",[a("strong",[t._v("1: 3CRV (DAI + USDC + USDT)")])]),t._v(" "),a("li",[t._v("Therefore, "),a("strong",[t._v("USDT index is "),a("code",[t._v("3")])])])])]),t._v(" "),a("li",[a("code",[t._v("SwapRoute")]),t._v(" "),a("strong",[t._v("USDT ->  WETH")]),t._v(": "),a("strong",[t._v("[TRICRYPTO2_pool, WETH, 0, 2, False, True, min_eth_amount_from_swap]")])]),t._v(" "),a("li",[a("code",[t._v("SwapRoute")]),t._v(" "),a("strong",[t._v("WETH -> ETH")]),t._v(": "),a("strong",[t._v("[WETH, VETH, 0, 0, False, False, 0]")])]),t._v(" "),a("li",[t._v("Deposit "),a("strong",[t._v("ETH to stETH")]),t._v("; new pool information.")])])])}),[],!1,null,null,null);s.default=r.exports}}]);